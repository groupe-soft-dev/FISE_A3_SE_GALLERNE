classDiagram
direction LR

namespace View{
    class Invoker{
        - command : ICommand
        + setCommand(ICommand) void
        + executeCommand() void
    }
}

namespace ViewModel{

    class ManageJob{
        + CreateJobCommand() void
        + ViewJobsCommand() void
        + ModifyJobCommand() void
        + DeleteJobCommand() void
    }

    class ICommand{
        + execute() void
    }

    class RunJob{
        + RunJobCommand(JobList) void
    }
}

<<Interface>> ICommand

Invoker --> ICommand

ManageJob --|> ICommand
RunJob --|> ICommand

namespace Model{
    class IJobs{
        - executiontype : IExecutionType
        - name : string
        - source : string
        - target : string
        - type : string
        + RunJobCommand() void
        + CreateJobCommand() void
        + ModifyJobCommand() void
        + DeleteJobCommand() void
    }

    class BackUpJob{
        - backuptype : IBackUpType
        - name : string
        - source : string
        - target : string
        - type : string
        + RunJobCommand() void
        + CreateJobCommand() void
        + ModifyJobCommand() void
        + DeleteJobCommand() void

    }

    class IBackUpType{
        + execute() bool
    }

    class DifferentialType{
        + execute() bool
    }

    class FullType{
        + execute() bool
    }

    class BackUpTypeFactory {
        - type : string
        + getBackLogType() IBackUpType
    }

    class DifferentialTypeFactory{
        + getBackLogType() DifferentialType
    }
    
    class FullTypeFactory{
        + getBackLogType() FullType
    }

    class StatusLog{
        + jobname : string
        + logpath : string
        + getInstance() StatusLog
        + writeLog() void
    }

    class DailyLog{
        + filelist : list<IFile>
        + logpath : string
        + getInstance() DailyLog
        + CreateDailyLog() void
        + AddFileLog(IFile) void
    }

    class FileLog{
        - namejob : string
        - source : string
        - target : string
        - filesize : int
        - transfertime : double
        - timestamp : double
        + WriteFileLog() void
    }
    
    class IConfigJobs {
        - backuptype : IBackUpType
        + createJob() void
        + showJob() void
        + detailJob() void
    }
}

<<Interface>> IJobs
<<Interface>> IBackUpType
<<Interface>> IConfigJobs
<<Singleton>> StatusLog
<<Singleton>> DailyLog



RunJob --> IJobs
ManageJob --> IConfigJobs
BackUpJob ..|> IJobs

IBackUpType --o BackUpJob
DifferentialType ..|> IBackUpType
FullType ..|> IBackUpType

DifferentialTypeFactory --|> BackUpTypeFactory
FullTypeFactory --|> BackUpTypeFactory
BackUpTypeFactory ..> IBackUpType

StatusLog ..|> BackUpJob

DailyLog ..|> FileLog
